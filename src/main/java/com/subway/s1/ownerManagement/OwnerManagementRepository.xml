<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.subway.s1.ownerManagement.OwnerManagementRepository">

 
 	<!-- 가맹점 List -->
	<select id="ownerList" parameterType="Pager" resultType="OwnerVO">
	select * from Store where 
	<choose>	
		<when test="kind=='name'">
		name
		</when>
		<when test="kind=='address'">
		address
		</when>
		<otherwise>
		storeNum
		</otherwise>
	</choose>
	 like CONCAT('%',#{search},'%')
	 limit #{startRow}, 10
	</select>  

	<select id="bestList" parameterType="Pager" resultType="OwnerVO">
		select * from Store where 
	<choose>	
		<when test="kind=='name'">
		name
		</when>
		<when test="kind=='address'">
		address
		</when>
		<otherwise>
		storeNum
		</otherwise>
	</choose>
	 like CONCAT('%',#{search},'%')
	 order by storeScore desc
	 limit #{startRow}, 10
	</select>
	
	
	<select id="worstList" parameterType="Pager" resultType="OwnerVO">
		select * from Store where 
	<choose>	
		<when test="kind=='name'">
		name
		</when>
		<when test="kind=='address'">
		address
		</when>
		<otherwise>
		storeNum
		</otherwise>
	</choose>
	 like CONCAT('%',#{search},'%')
	 order by storeScore asc
	 limit #{startRow}, 10
	</select>
	
	<!-- 가맹점 회원 수 count -->
	<select id="ownerCount"  parameterType="Pager"  resultType="Long">
    	select count(storeNum) from Store where 
    		<choose>	
				<when test="kind=='name'">
				name
				</when>
				<when test="kind=='address'">
				address
				</when>
				<otherwise>
				storeNum
				</otherwise>
			</choose>
	 like CONCAT('%',#{search},'%')
	</select>
	
	<select id="ownerSelectOne" parameterType="OwnerVO" resultType="OwnerVO">
	select * from Store where storeNum=#{storeNum}
	</select>
	
	<!-- 가맹점 폐점시 삭제 -->
	<delete id="ownerDelete" parameterType="String" >
	delete from Store where storeNum=#{storeNum}
	</delete>
	<!-- 가맹점 여러개 삭제 -->
	<delete id="ownerDeletes" parameterType="List">
	delete from Store where storeNum in
	<foreach collection="list" item="storeNum" open="(" close=")" separator=",">
	#{storeNum}
	</foreach>
	</delete>
	
	<!-- 가맹점 삭제시 회원정보 삭제 -->
	<delete id="ownerMemberDelete" parameterType="String">
	delete from Member where id=#{id}
	</delete>
	<!-- 베스트 매장 리셋 -->
	<update id="bestRest" parameterType="OwnerVO">
	update Store set best=0;
	</update>
	<!-- 베스트매장 bestPick -->
	<update id="bestPick" parameterType="List">
		update Store set best=1 where storeNum in
		<foreach collection="list" item="storeNum" open="(" close=")" separator=",">
		#{storeNum}
		</foreach>
	</update>
	
	
 	<!-- 가맹점 등록 -->
<!--	<insert id="ownerJoin" parameterType="OwnerVO">
	  insert into Member values (#{id},#{pw},(select name from Store where storeNum=#{storeNum}),
	(select left(telNumber,2) from Store where storeNum=#{storeNum}),
	(select SUBSTRING_INDEX(substring(telNumber,4,4),'-',1) from Store where storeNum=#{storeNum}),
	(select SUBSTRING_INDEX(substring(telNumber,8,5),'-',-1) from Store where storeNum=#{storeNum}),
	0,#{storeNum},2);
	</insert> -->
</mapper>