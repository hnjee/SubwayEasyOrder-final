<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
<mapper namespace="com.subway.s1.sales.chart.ChartRepository">

<select id="monthChart" parameterType="ChartVO" resultType="ChartVO" >
	select distinct left(M.payDate,7) as month,sum(M.totalPrice) as totalPrice, left(CURDATE(),7) as todayMonth from
	(select S.payNum,Pay.payDate as payDate, Pay.totalPrice as totalPrice
	From Sales AS S 
	left join Payment AS Pay
	ON S.payNum = Pay.payNum
    where Pay.refund=0 and Pay.storeNum= #{storeNum}
    ) M
    where left(M.payDate,4) like left(CURDATE(),4)
    group by month
    order by month asc

</select>


<select id="weekChart" parameterType="ChartVO" resultType="ChartVO">
	select dayofweek(D.payDate) as day,dayName(D.payDate) as day2,sum(D.totalPrice) as totalPrice, left(CURDATE(),7) as todayMonth from
	(select S.payNum,Pay.payDate as payDate, Pay.totalPrice as totalPrice
	From Sales AS S 
	left join Payment AS Pay
	ON S.payNum = Pay.payNum 
    where Pay.refund=0 and Pay.storeNum= #{storeNum}
    )D
	where left(D.payDate,7) like left(CURDATE(),7)
    group by day,day2
    order by day
</select>

<select id="yearChart" parameterType="ChartVO" resultType="ChartVO">
	select year(D.payDate) as year,sum(D.totalPrice) as totalPrice from
	(select S.payNum,Pay.payDate as payDate, Pay.totalPrice as totalPrice
	From Sales AS S 
	left join Payment AS Pay
	ON S.payNum = Pay.payNum 
	where Pay.refund=0 and Pay.storeNum= #{storeNum}
    )D
    group by year
    order by year

</select>

<select id="timeChart" parameterType="ChartVO" resultType="ChartVO">
	select substring(D.payDate,11,3) as time,sum(D.totalPrice) as totalPrice, left(CURDATE(),7) as todayMonth from
	(select S.payNum,Pay.payDate as payDate, Pay.totalPrice as totalPrice
	From Sales AS S 
	left join Payment AS Pay
	ON S.payNum = Pay.payNum
    where Pay.refund=0 and left(Pay.payDate,7) like left(CURDATE(),7)and Pay.storeNum= #{storeNum}
    )D
    group by time
    order by time desc;

</select>

<select id="menuCount" parameterType="String" resultType="Long">
	select count(productCount) productCount
	from OrderProduct O left Join Payment P on O.payNum=P.payNum left Join Menu M on O.menuNum=M.menuNum
	where M.menuCode like concat('%',#{code},'%') and P.storeNum=#{storeNum}
</select>

</mapper>